    // Inspect the following #defines. Change them to taste. If you don't
    // need a particular option, change its value into an empty string

    // For more information about this file: 'man 7 icmconf'

    // define any additional libraries the program may need:
#define ADD_LIBRARIES       "bobcat"

    // define any additional paths (other than the standard paths) the
    // additional libraries are located in:
#define ADD_LIBRARY_PATHS   ""

    // Uncomment to clear the screen just before starting the compilation
    // process 
//#define CLS

    // The compiler to use. Define CC instead if a C compiler should be used.
#define CXX            "g++"
//#define CC            "gcc"

    // The compiler options to use. Define CFLAGS instead if a C compiler is
    // used.
#define CXXFLAGS        " --std=c++0x -Wall -O2 -pthread"
//#define CFLAGS        " -Wall -g -O2"

    // Options passed to the linker:
#define LDFLAGS         ""

    // Uncomment to construct a library. Optionally use another name (don't
    // use lib or an extension like .a)
//#define LIBRARY           "modules"

    // The source containing main():
#define MAIN                "main.cc"

    //  The extension of object modules:
#define OBJ_EXT             ".o"

    // Uncomment to construct a shared library 
//#define SHARED

    // When creating a shared library:
    // Specify the names of any libraries and library paths that are required
    // by the shared library. E.g., if a library is found in /usr/lib/special
    // use "-L/usr/lib/special -lspecial" if the name of the library is
    // libspecial.so
    // The /lib and /usr/lib paths are usually predefined and need not be 
    // specified
#define SHAREDREQ           ""

    // The pattern locating sources in a directory:
#define SOURCES             "*.cc"

    // Directory below this directory to contain temporary results
#define TMP_DIR             "tmp"

    // Uncomment to use the ALL facility and a class dependency setup in the
    // CLASSES file. When a directory contains a file ALL (optionally rename
    // this filename by providing an alternative name) then all its sources
    // and all sources of all classes depending on it are also compiled.  
    // Class dependencies are indicated by the class name (as the first
    // word on a line) optionally followed by additional class names, which
    // are the classes directly depending on the line's first class name.
//#define USE_ALL             "a"

    // should commands be echoed (ON) or not (OFF) ?
#define USE_ECHO              ON

#define DEFCOM "program"
